#include <iostream>
#include <vector>

using namespace std;

int main() {
    int n, m;
    cin >> n >> m; // citim numărul de noduri și numărul de muchii

    // citim lista de incidență
    vector<vector<int>> lista_incidenta(m, vector<int>(n, 0));
    for (int i = 0; i < m; i++) {
        int x, y;
        cin >> x >> y;
        lista_incidenta[i][x-1] = 1;
        lista_incidenta[i][y-1] = -1;
    }

    // initializam matricea de adiacenta cu 0-uri
    vector<vector<int>> matrice_adiacenta(n, vector<int>(n, 0));

    // parcurgem fiecare muchie din lista de incidenta si marcam matricea de adiacenta
    for (int i = 0; i < m; i++) {
        int x = -1, y = -1;
        for (int j = 0; j < n; j++) {
            if (lista_incidenta[i][j] == 1) {
                x = j;
            } else if (lista_incidenta[i][j] == -1) {
                y = j;
            }
        }
        matrice_adiacenta[x][y] = 1;
        matrice_adiacenta[y][x] = 1;
    }

    // afișăm matricea de adiacență
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            cout << matrice_adiacenta[i][j] << " ";
        }
        cout << endl;
    }

    return 0;
}



Explicație:

Se citește numărul de noduri n și numărul de muchii m.
Se citește lista de incidență și se construiește matricea de adiacență, parcurgând fiecare muchie din lista de incidență și marcând matricea de adiacență în consecință.
Se afișează matricea de adiacență.
În cazul unei liste de incidență de forma {{1, 2}, {2, 3}, {1, 3}}, programul va afișa matricea de adiacență:


0 1 1
1 0 1
1 1 0
