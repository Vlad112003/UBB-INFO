        -:    0:Source:D:/FacultaSem2/SDA/colectie_cu_main/Colectie.cpp
        -:    0:Graph:D:\FacultaSem2\SDA\colectie_cu_main\cmake-build-debug-coverage\CMakeFiles\colectie_cu_main.dir\Colectie.cpp.gcno
        -:    0:Data:D:\FacultaSem2\SDA\colectie_cu_main\cmake-build-debug-coverage\CMakeFiles\colectie_cu_main.dir\Colectie.cpp.gcda
        -:    0:Runs:1
        -:    1:#include "Colectie.h"
        -:    2:#include "IteratorColectie.h"
        -:    3:#include <exception>
        -:    4:#include <iostream>
        -:    5:
        -:    6:using namespace std;
        -:    7:
        -:    8:
function _ZN8ColectieC2Ev called 1 returned 100% blocks executed 80%
        1:    9:Colectie::Colectie() {
        -:   10:    //capacitate
        1:   11:	cp = 10;
        -:   12:    //vectorul de elemente
       1*:   13:    e = new TElem[cp];
        1:   13-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 0
        1:   13-block  1
    %%%%%:   13-block  2
call    2 never executed
        1:   13-block  3
call    3 returned 1
        -:   14:    //numarul de elemente din vector
        1:   15:    n = 0;
        -:   16:
        1:   17:}
        -:   18:
function _ZN8Colectie5redimEv called 0 returned 0% blocks executed 0%
    #####:   19:void Colectie::redim() {
    #####:   20:    TElem *eNou = new int[2*cp];
    %%%%%:   20-block  0
branch  0 never executed
branch  1 never executed
    %%%%%:   20-block  1
    %%%%%:   20-block  2
call    2 never executed
    %%%%%:   20-block  3
call    3 never executed
        -:   21:
    #####:   22:    for (int i = 0; i<n; i++)
    %%%%%:   22-block  0
branch  0 never executed
branch  1 never executed
    #####:   23:        eNou[i] = e[i];
    %%%%%:   23-block  0
        -:   24:
    #####:   25:    cp = 2*cp;
        -:   26:
    #####:   27:    delete[] e;
    %%%%%:   27-block  0
branch  0 never executed
branch  1 never executed
    %%%%%:   27-block  1
call    2 never executed
        -:   28:
    #####:   29:    e = eNou;
        -:   30:
        -:   31:
    #####:   32:}
        -:   33:
function _ZN8Colectie6adaugaEi called 1 returned 100% blocks executed 67%
        1:   34:void Colectie::adauga(TElem elem) {
        1:   35:	if (n == cp)
        1:   35-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    #####:   36:        redim();
    %%%%%:   36-block  0
call    0 never executed
        -:   37:
        1:   38:    this->e[n++] = elem;
        1:   39:}
        -:   40:
        -:   41:
function _ZN8Colectie6stergeEi called 2 returned 100% blocks executed 89%
        2:   42:bool Colectie::sterge(TElem elem) {
        2:   43:	int i = 0;
        2:   44:    int pos = 0;
       47:   45:    while (e[i] != elem)
        2:   45-block  0
       47:   45-block  1
branch  0 taken 45
branch  1 taken 2 (fallthrough)
        -:   46:    {
       45:   47:        i++;
       45:   48:        pos++;
       45:   49:        if (i==n)
       45:   49-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 45
    #####:   50:            return false;
    %%%%%:   50-block  0
        -:   51:    }
        3:   52:    for (i=pos; i<n; i++)
        2:   52-block  0
        3:   52-block  1
branch  0 taken 1
branch  1 taken 2 (fallthrough)
        1:   53:        e[i] = e[i+1];
        1:   53-block  0
        2:   54:    n= n -1;
        2:   55:    return true;
        2:   55-block  0
        -:   56:
        -:   57:
        -:   58:}
        -:   59:
        -:   60:
function _ZNK8Colectie5cautaEi called 0 returned 0% blocks executed 0%
    #####:   61:bool Colectie::cauta(TElem elem) const {
        -:   62:	int i;
    #####:   63:    for (i=0; i<=n; i++)
    %%%%%:   63-block  0
    %%%%%:   63-block  1
    %%%%%:   63-block  2
branch  0 never executed
branch  1 never executed
    #####:   64:       if (e[i] == elem){
    %%%%%:   64-block  0
branch  0 never executed
branch  1 never executed
    #####:   65:            return true;
    %%%%%:   65-block  0
        -:   66:        }
    #####:   67:    return false;
    %%%%%:   67-block  0
        -:   68:
        -:   69:}
        -:   70:
function _ZNK8Colectie10nrAparitiiEi called 0 returned 0% blocks executed 0%
    #####:   71:int Colectie::nrAparitii(TElem elem) const {
        -:   72:	int i;
    #####:   73:    int nr = 0;
    #####:   74:    for (i=0; i<=n; i++)
    %%%%%:   74-block  0
    %%%%%:   74-block  1
    %%%%%:   74-block  2
branch  0 never executed
branch  1 never executed
    #####:   75:        if (e[i] == elem){
    %%%%%:   75-block  0
branch  0 never executed
branch  1 never executed
    #####:   76:            nr++;
    %%%%%:   76-block  0
        -:   77:        }
    #####:   78:    return nr;
    %%%%%:   78-block  0
        -:   79:}
        -:   80:
        -:   81:
function _ZNK8Colectie3dimEv called 0 returned 0% blocks executed 0%
    #####:   82:int Colectie::dim() const {
    #####:   83:	return n;
    %%%%%:   83-block  0
        -:   84:}
        -:   85:
        -:   86:
function _ZNK8Colectie4vidaEv called 0 returned 0% blocks executed 0%
    #####:   87:bool Colectie::vida() const {
    #####:   88:	return n==0;
    %%%%%:   88-block  0
        -:   89:}
        -:   90:
function _ZNK8Colectie8iteratorEv called 0 returned 0% blocks executed 0%
    #####:   91:IteratorColectie Colectie::iterator() const {
    #####:   92:	return  IteratorColectie(*this);
    %%%%%:   92-block  0
call    0 never executed
        -:   93:}
        -:   94:
        -:   95:
function _ZN8ColectieD2Ev called 1 returned 100% blocks executed 100%
        1:   96:Colectie::~Colectie() {
        1:   97:	delete[] e;
        1:   97-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 0
        1:   97-block  1
call    2 returned 1
        1:   98:}
        -:   99:
        -:  100:
